<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar pause;
pause = false;

help = 0;

player = -1;

points = 0;

bSpd = 10;

audio_play_sound(snd_music, 1, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == room_menu)
{
    if (keyboard_check_pressed(vk_escape) || keyboard_check_pressed(vk_backspace))
        game_end();
    else if (keyboard_check_pressed(vk_anykey))
        room_goto(room_play);
    
    pause = false;
}
else
{
    if (help == 0)
        if (keyboard_check_pressed(vk_anykey))
        {
            help = 1;
            pause = false;
        }
    if (keyboard_check_pressed(vk_escape))
        if (help == 1)
            pause = !pause;
    if (pause &amp;&amp; keyboard_check_pressed(vk_backspace))
        room = room_menu;
    
    if (help == 0)
        pause = true;
    
    if (keyboard_check_pressed(vk_f1))
        help = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == room_play)
{
    player = instance_create(room_width / 2, room_height - 100, obj_player);
    player.owner = id;
}
else player = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_default);

if (room == room_menu)
{
    draw_sprite(spr_logo, 0, room_width / 2, room_height / 3);
    
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_color(c_black);
    
    draw_text(room_width / 2, room_height / 3 + sprite_get_height(spr_logo), "Keep all 8 Slices of Pizza!#Get hit and lose a slice!#Dodge or kill enemies!#Pick up rocket ammo!#Press a key to start!");
    
    drawReset();
}
else
{
    if (pause)
    {
        draw_set_alpha(.5);
        draw_set_halign(fa_center);
        draw_set_valign(fa_middle);
        draw_set_color(c_white);
        
        if (help == 0)
            draw_text(room_width / 2, room_height / 2, "Arrow Keys - Move#Z - Fire Cheese#X - Fire Pepperonis#Any Key - Start!");
        else draw_text(room_width / 2, room_height / 2, "Game Paused#Press F1 for help.#Press Backspace to return to the main menu.");
        
        drawReset();
        
        background_vspeed[0] = 0;
    }
    else background_vspeed[0] = bSpd;
    
    for (var i = 0; i &lt; player.hp; i++)
        draw_sprite(spr_health, 0, 8 + i * (sprite_get_width(spr_health) + 3) + 3, 3 + 8);
    for (var i = 0; i &lt; player.ammo; i++)
        draw_sprite(spr_rocketAmmo, 0, 8 + i * (sprite_get_width(spr_rocketAmmo) + 3) + 3, 6 + 8 + sprite_get_height(spr_health));
    
    draw_set_valign(fa_bottom);
    draw_set_color(c_white);
    
    if (player.hp &lt;= 0)
    {
        draw_set_halign(fa_center);
        draw_set_valign(fa_middle);
        draw_set_font(font_large);
        draw_text(room_width / 2, room_height / 2, "Score: " + string(points));
    }
    else draw_text(5, room_height, "Score: " + string(points));
    
    
    drawReset();
}
draw_set_halign(fa_right);
draw_set_color(c_white);
draw_text(room_width, 5, "FPS: " + string(fps));
drawReset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
